{"version":3,"sources":["components/AddTask/AddTask.module.scss","store/actions/taskActions.js","components/AddTask/AddTask.jsx","components/Task/Task.jsx","components/TaskList/TaskList.jsx","components/App.js","store/reducers/rootReducer.js","store/reducers/taskReducer.js","store/store.js","helpers/localStorage.js","index.js"],"names":["module","exports","ADD_TASK","EDIT_TASK","DELETE_TASK","addTask","task","isImportant","type","payload","id","uuid","v4","AddTask","useState","newTask","setNewTask","isTaskImportant","setIsTaskImportant","tasks","useSelector","state","dispatch","useDispatch","className","style","onChange","e","target","value","placeholder","prev","addnewTaskButton","onClick","preventDefault","addNewTask","LastTask","slice","length","window","confirm","Task","TaskList","currenTaskList","map","element","App","rootReducer","combineReducers","action","currentList","filter","currentStateList","console","warn","persistedStore","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.425e7d96.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addTask\":\"AddTask_addTask__2W_Zo\",\"addnewTaskButton\":\"AddTask_addnewTaskButton__sO06K\"};","import uuid from 'uuid';\r\n\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const EDIT_TASK = 'EDIT_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\n\r\n\r\nexport const addTask = ({task,isImportant}) =>({\r\n      type:ADD_TASK,\r\n      payload:{\r\n         id: uuid.v4(),\r\n         task,\r\n         isImportant,\r\n      }\r\n\r\n   })\r\n   \r\nexport const editTask = ({id,task,isImportant}) => ({  // ({data})\r\n   type:EDIT_TASK,\r\n   payload: {\r\n      //...data\r\n      id,\r\n      task,\r\n      isImportant,\r\n   }\r\n})\r\n\r\nexport const deleteTask = id =>({\r\n   type:DELETE_TASK,\r\n   payload:{\r\n      id,\r\n   }\r\n})","import React from 'react'\r\nimport {useState} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport { addTask } from '../../store/actions/taskActions'\r\n\r\nimport style from './AddTask.module.scss'\r\n\r\n\r\nconst AddTask = () =>{\r\n   const [newTask, setNewTask] = useState()\r\n   const [isTaskImportant,setIsTaskImportant] = useState(false);\r\n   const tasks = useSelector(state => state.tasks)\r\n   const dispatch = useDispatch()\r\n   const handleNewTaskInput = (e) =>{\r\n      setNewTask(e.target.value)\r\n   }\r\n\r\n   const handleImportantChange = (e) =>{\r\n      setIsTaskImportant(prev=> !prev)\r\n   }\r\n   const handleAddNewTaskButton = (e) =>{\r\n      e.preventDefault();\r\n      const addNewTask = {\r\n         task: newTask,\r\n         isImportant: isTaskImportant,\r\n      }\r\n      const LastTask = tasks.slice(-1)[0];\r\n\r\n      \r\n      if(newTask.length > 3){\r\n \r\n         if(LastTask && LastTask.task === newTask){\r\n         \r\n            if(window.confirm(\"This task already exist. Would you like to add it anyway?\")){\r\n   \r\n               dispatch(addTask(addNewTask))\r\n            }\r\n         }else{\r\n            dispatch(addTask(addNewTask))\r\n         }\r\n      } \r\n   }\r\n   return (\r\n      <div className={style.addTask}>\r\n            <p>\r\n               <input type=\"text\" onChange={handleNewTaskInput} placeholder=\"New Task...\"/>\r\n                       \r\n            </p>\r\n            \r\n            <p><input onChange={handleImportantChange} type=\"checkbox\"/> is important?</p>\r\n            <button className={style.addnewTaskButton} onClick={handleAddNewTaskButton}>Add new task</button>\r\n         </div>\r\n   );\r\n}\r\n\r\nexport default AddTask;","import React from 'react';\r\n\r\n\r\nconst Task = ({id,task,isImportant}) =>{\r\n  \r\n   return (\r\n         <>\r\n            <li>task<button>Done</button><button>Delete</button></li>\r\n         </>\r\n   );\r\n}\r\n\r\nexport default Task;","import React from 'react'\r\n\r\nimport {useSelector} from 'react-redux'\r\nimport Task from '../Task/Task'\r\n\r\nconst TaskList = () =>{\r\n   const tasks = useSelector(state => state.tasks)\r\n   const currenTaskList = tasks.map(element => {\r\n      return (<Task key={element.id} {...element}/>)\r\n   })\r\n   return (\r\n            <div className=\"tasks\">\r\n               <h2>Current tasks list:</h2>\r\n               <ul className=\"tasksList\" >\r\n                  {currenTaskList}\r\n               </ul>\r\n            </div>\r\n         );\r\n}\r\n\r\nexport default TaskList;","import React from 'react'\nimport AddTask from './AddTask/AddTask'\nimport TaskList from './TaskList/TaskList'\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <AddTask/>\n        <TaskList/> \n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux'\r\nimport { taskReducer } from './taskReducer'\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n   tasks: taskReducer,\r\n})","\r\nimport {\r\n   ADD_TASK,EDIT_TASK,DELETE_TASK\r\n} from '../actions/taskActions'\r\nimport uuid from 'uuid';\r\n\r\n\r\nexport const taskReducer = (state = [], action) =>{\r\n   switch(action.type){\r\n      case ADD_TASK:\r\n         return [...state, action.payload];\r\n      case EDIT_TASK:\r\n         return state.map(currentList =>{\r\n            if(currentList.id !== action.payload.id){\r\n               return currentList \r\n            }\r\n            return ({\r\n               id: currentList.id,\r\n               task: action.payload.task,\r\n               isImportant: action.payload.isImportant\r\n              \r\n            })\r\n         });\r\n      case DELETE_TASK:\r\n         return state.filter(currentStateList => currentStateList.id !== action.payload.id);\r\n      default:\r\n         console.warn(`Nie mamy akcji typu: ${action.type}`)\r\n         return state;\r\n   }\r\n \r\n}","import {createStore} from 'redux'\r\nimport {loadState,saveState} from '../helpers/localStorage'\r\nimport {rootReducer} from './reducers/rootReducer'\r\nconst persistedStore = loadState();\r\n\r\nconst store = createStore(\r\n   rootReducer,\r\n   persistedStore,\r\n   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n   )\r\n\r\nstore.subscribe(() => {\r\n   saveState(store.getState())\r\n})\r\nexport default store;","export const loadState = () =>{\r\n   try{\r\n      const serializedState = localStorage.getItem('state');\r\n      if(serializedState === null) {\r\n         return undefined;\r\n      }\r\n      return JSON.parse(serializedState)\r\n   }catch(err){\r\n      return undefined\r\n   }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n   try{\r\n      const serializedState = JSON.stringify(state);\r\n      localStorage.setItem('state',serializedState)\r\n   }catch(err){\r\n      //ignore for a while\r\n   }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './store/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}