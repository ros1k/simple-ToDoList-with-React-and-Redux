{"version":3,"sources":["components/Task/Task.module.scss","components/AddTask/AddTask.module.scss","store/actions/currentTasksActions.js","store/actions/taskActions.js","components/AddTask/AddTask.jsx","components/TaskList/TaskList.jsx","components/App.js","store/actions/finishedTasksActions.js","store/reducers/rootReducer.js","store/reducers/taskReducer.js","store/reducers/currentTasksReducer.js","store/reducers/finishedTasksReducer.js","store/store.js","helpers/localStorage.js","index.js"],"names":["module","exports","ADD_CURRENT_TASK","DELETE_CURRENT_TASK","ADD_TASK","EDIT_TASK","CHANGE_TASK_STATUS","DELETE_TASK","addTask","task","isImportant","isDone","type","payload","id","uuid","v4","AddTask","useState","newTask","setNewTask","isTaskImportant","setIsTaskImportant","tasks","useSelector","state","dispatch","useDispatch","className","style","onChange","e","target","value","placeholder","prev","addnewTaskButton","onClick","preventDefault","addNewTask","LastTask","slice","length","window","confirm","TaskList","listName","showCurrentTaskList","post","find","element","console","log","App","ADD_FINISHED_TASK","DELETE_FINISHED_TASK","rootReducer","combineReducers","action","map","currentList","filter","currentStateList","warn","currentTasksReducer","finishedTasksReducer","persistedStore","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e228b1ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__AtD0k\",\"taskName\":\"Task_taskName__2ClJ9\",\"buttonsWrapper\":\"Task_buttonsWrapper__ijWmA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addTask\":\"AddTask_addTask__2W_Zo\",\"addnewTaskButton\":\"AddTask_addnewTaskButton__sO06K\"};","export const ADD_CURRENT_TASK = 'ADD_CURRENT_TASK';\r\nexport const DELETE_CURRENT_TASK = 'DELETE_CURRENT_TASK';\r\n\r\n\r\nexport const addCurrentTask = id =>({\r\n      type:ADD_CURRENT_TASK,\r\n      payload:{\r\n         id     \r\n      }\r\n   })\r\n   \r\nexport const deleteCurrentTask = id =>({\r\n      type:DELETE_CURRENT_TASK,\r\n      payload:{\r\n         id,\r\n      }\r\n   })","import uuid from 'uuid';\r\n\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const EDIT_TASK = 'EDIT_TASK';\r\nexport const CHANGE_TASK_STATUS = 'CHANGE_TASK_STATUS';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\n\r\n\r\nexport const addTask = ({task,isImportant,isDone}) =>({\r\n      type:ADD_TASK,\r\n      payload:{\r\n         id: uuid.v4(),\r\n         task,\r\n         isImportant,\r\n         isDone,\r\n      }\r\n\r\n   })\r\n   \r\nexport const editTask = ({id,task,isImportant,isDone}) => ({  // ({data})\r\n      type:EDIT_TASK,\r\n      payload: {\r\n         //...data\r\n         id,\r\n         task,\r\n         isImportant,\r\n         isDone,\r\n      }\r\n   })\r\nexport const changeTaskStatus = ({id,isDone}) => ({\r\n      type:CHANGE_TASK_STATUS,\r\n      payload:{\r\n         id,\r\n         isDone,\r\n      }\r\n   })\r\nexport const deleteTask = id =>({\r\n      type:DELETE_TASK,\r\n      payload:{\r\n         id,\r\n      }\r\n   })","import React,{useEffect} from 'react'\r\nimport {useState} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport { addCurrentTask } from '../../store/actions/currentTasksActions'\r\nimport { addTask } from '../../store/actions/taskActions'\r\n\r\nimport style from './AddTask.module.scss'\r\n\r\n\r\nconst AddTask = () =>{\r\n   const [newTask, setNewTask] = useState('')\r\n   const [assignID,setAssignID] = useState()\r\n   const [isTaskImportant,setIsTaskImportant] = useState(false);\r\n   const tasks = useSelector(state => state.tasks)\r\n   const dispatch = useDispatch()\r\n   const handleNewTaskInput = (e) =>{\r\n      setNewTask(e.target.value)\r\n   }\r\n\r\n   const handleImportantChange = (e) =>{\r\n      setIsTaskImportant(prev=> !prev)\r\n   }\r\n   const handleAddNewTaskButton = (e) =>{\r\n      e.preventDefault();\r\n      const addNewTask = {\r\n         task: newTask,\r\n         isImportant: isTaskImportant,\r\n         isDone: false,\r\n      }\r\n      const LastTask = tasks.slice(-1)[0];\r\n      if(newTask.length > 1){\r\n         if(LastTask && LastTask.task === newTask){\r\n            if(window.confirm(\"This task already exist. Would you like to add it anyway?\")){\r\n               dispatch(addTask(addNewTask))\r\n               setNewTask('')\r\n         \r\n            }\r\n         }else{\r\n            dispatch(addTask(addNewTask))\r\n            setNewTask('')\r\n         \r\n         }\r\n      } \r\n\r\n      }\r\n  \r\n   return (\r\n      <div className={style.addTask}>\r\n            <p>\r\n               <input type=\"text\" onChange={handleNewTaskInput} value={newTask} placeholder=\"New Task...\"/>\r\n                       \r\n            </p>\r\n            \r\n            <p><input onChange={handleImportantChange} type=\"checkbox\"/> is important?</p>\r\n            <button className={style.addnewTaskButton} onClick={handleAddNewTaskButton}>Add new task</button>\r\n         </div>\r\n   );\r\n}\r\n\r\nexport default AddTask;","import React,{useState,useEffect} from 'react'\r\n\r\nimport {useSelector} from 'react-redux'\r\nimport Task from '../Task/Task'\r\n\r\nconst TaskList = ({listName,showCurrentTaskList}) =>{\r\n   const tasks = useSelector(state => state.tasks);\r\n\r\n   \r\n   const post = useSelector(state =>\r\n      state.tasks.find(element => showCurrentTaskList === element.isDone)\r\n    )\r\n   \r\n   console.log(post);\r\n \r\n\r\n{/* return (<Task key={element.id} i={index} {...element} />) */}\r\n\r\n   return (\r\n      <>\r\n         \r\n            <div className=\"tasks\">\r\n               <h2>{listName}</h2>\r\n               <ul className=\"tasksList\" >\r\n                   {/* {currentTaskList} */}\r\n   \r\n               </ul> \r\n            </div>\r\n          \r\n            \r\n      </>\r\n         );\r\n}\r\n\r\nexport default TaskList;","import React from 'react'\nimport AddTask from './AddTask/AddTask'\nimport TaskList from './TaskList/TaskList'\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <AddTask/>\n        <TaskList showCurrentTaskList={false} listName=\"Current tasks:\"/>\n        <TaskList showCurrentTaskList={true} listName=\"Finished tasks:\"/> \n    </div>\n  );\n}\n\nexport default App;\n","export const ADD_FINISHED_TASK = 'ADD_FINISHED_TASK';\r\nexport const DELETE_FINISHED_TASK = 'DELETE_FINISHED_TASK';\r\n\r\n\r\nexport const addFinishedTask = id =>({\r\n      type:ADD_FINISHED_TASK,\r\n      payload:{\r\n        id   \r\n      }\r\n   })\r\n   \r\nexport const deleteFinishedTask = id =>({\r\n      type:DELETE_FINISHED_TASK,\r\n      payload:{\r\n         id,\r\n      }\r\n   })","import { combineReducers } from 'redux'\r\nimport { taskReducer } from './taskReducer'\r\nimport { currentTasksReducer} from './currentTasksReducer'\r\nimport { finishedTasksReducer} from './finishedTasksReducer'\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n   tasks: taskReducer,\r\n   currentTasksReducer,\r\n   finishedTasksReducer,\r\n})","import {\r\n   ADD_TASK,EDIT_TASK,CHANGE_TASK_STATUS,DELETE_TASK\r\n} from '../actions/taskActions'\r\n\r\n\r\nexport const taskReducer = (state = [], action) =>{\r\n   switch(action.type){\r\n      case ADD_TASK:\r\n         return [...state, action.payload];\r\n      case EDIT_TASK:\r\n         return state.map(currentList =>{\r\n            if(currentList.id !== action.payload.id){\r\n               return currentList \r\n            }\r\n            return ({\r\n               id: currentList.id,\r\n               task: action.payload.task,\r\n               isImportant: action.payload.isImportant,\r\n               isDone: action.payload.isDone\r\n              \r\n            })\r\n         });\r\n      case CHANGE_TASK_STATUS:\r\n         return state.map(currentList =>{\r\n            if(currentList.id !== action.payload.id){\r\n            \r\n               return currentList \r\n            }\r\n        \r\n            // console.log(currentList.id,\" | \",action.payload.id);\r\n            // console.info(\"current state: \",currentList.isDone,\" new state: \",action.payload.isDone)\r\n            return ({\r\n               id: currentList.id,\r\n               task: currentList.task,\r\n               isImportant: currentList.isImportant,\r\n               isDone: action.payload.isDone\r\n              \r\n            })\r\n         });\r\n      case DELETE_TASK:\r\n         return state.filter(currentStateList => currentStateList.id !== action.payload.id);\r\n      default:\r\n         console.warn(`Nie mamy akcji typu: ${action.type}`)\r\n         return state;\r\n   }\r\n \r\n}","import {\r\n   ADD_CURRENT_TASK,DELETE_CURRENT_TASK\r\n} from '../actions/currentTasksActions'\r\n\r\nexport const currentTasksReducer = (state = [], action) =>{\r\n   switch(action.type){\r\n      case ADD_CURRENT_TASK:\r\n         return [...state, action.payload];\r\n      case DELETE_CURRENT_TASK:\r\n         return state.filter(currentStateList => currentStateList.id !== action.payload.id);\r\n      default:\r\n         console.warn(`Nie mamy akcji typu: ${action.type}`)\r\n         return state;\r\n   }\r\n \r\n}","import {\r\n   ADD_FINISHED_TASK,DELETE_FINISHED_TASK\r\n} from '../actions/finishedTasksActions'\r\n\r\nexport const finishedTasksReducer = (state = [], action) =>{\r\n   switch(action.type){\r\n      case ADD_FINISHED_TASK:\r\n         return [...state, action.payload];\r\n      case DELETE_FINISHED_TASK:\r\n         return state.filter(currentStateList => currentStateList.id !== action.payload.id);\r\n      default:\r\n         console.warn(`Nie mamy akcji typu: ${action.type}`)\r\n         return state;\r\n   }\r\n \r\n}","import {createStore} from 'redux'\r\nimport {loadState,saveState} from '../helpers/localStorage'\r\nimport {rootReducer} from './reducers/rootReducer'\r\nconst persistedStore = loadState();\r\n\r\nconst store = createStore(\r\n   rootReducer,\r\n   persistedStore,\r\n   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n   )\r\n\r\nstore.subscribe(() => {\r\n   saveState(store.getState())\r\n})\r\nexport default store;","export const loadState = () =>{\r\n   try{\r\n      const serializedState = localStorage.getItem('state');\r\n      if(serializedState === null) {\r\n         return undefined;\r\n      }\r\n      return JSON.parse(serializedState)\r\n   }catch(err){\r\n      return undefined\r\n   }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n   try{\r\n      const serializedState = JSON.stringify(state);\r\n      localStorage.setItem('state',serializedState)\r\n   }catch(err){\r\n      //ignore for a while\r\n   }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './store/store'\nimport { AnimatePresence } from 'framer-motion';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}